version: '3.7'
services:

  haxcms:
    build:
      context: .
    image: haxcms-haxcms-odl:${CI_COMMIT_SHORT_SHA:-latest}
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:odl.${HOST:-docker.localhost}"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.docker.network=traefik-public"
        - "traefik.frontend.rule=Host:odl.${HOST:-docker.localhost}"
        - "traefik.tags=traefik-public"
        - "traefik.frontend.auth.basic.users=${BASIC_AUTH_CONFIG}"
      replicas: 1
      update_config:
        order: start-first
  
  hax-forms-service:
    image: heymp/hax-forms-service:v0.1.0
    networks:
      - traefik-public
    environment:
      - PRISMA_DB_PROVIDER=postgresql
      - PRISMA_DB_URL=postgresql://prisma:prisma@hax-forms-service-postgres/
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.port=4000"
        - "traefik.frontend.rule=Host:odl.${HOST:-docker.localhost}; Path:/service/hax-forms-service"
        - "traefik.docker.network=traefik-public"
        - "traefik.tags=traefik-public"
      replicas: 1
      update_config:
        order: start-first

  hax-forms-service-postgres:
    image: postgres:10.3
    restart: always
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
    volumes:
      - hax-forms-service:/var/lib/postgresql/data
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.tags=traefik-public"
      replicas: 1
      update_config:
        order: start-first

volumes:
  hax-forms-service:

networks:
  traefik-public:
    external: true